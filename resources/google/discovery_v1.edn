{"protocol" "rest", "schemas" {"RestMethod" {"properties" {"useMediaDownloadService" {"description" "Indicates that downloads from this method should use the download service URL (i.e. \"/download\"). Only applies if the method supports media download.", "type" "boolean"}, "path" {"type" "string", "description" "The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level."}, "id" {"type" "string", "description" "A unique ID for this method. This property can be used to match methods between different versions of Discovery."}, "httpMethod" {"type" "string", "description" "HTTP method used by this method."}, "scopes" {"items" {"type" "string"}, "type" "array", "description" "OAuth 2.0 scopes applicable to this method."}, "mediaUpload" {"properties" {"accept" {"description" "MIME Media Ranges for acceptable media uploads to this method.", "type" "array", "items" {"type" "string"}}, "protocols" {"properties" {"resumable" {"description" "Supports the Resumable Media Upload protocol.", "type" "object", "properties" {"path" {"type" "string", "description" "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level."}, "multipart" {"type" "boolean", "default" "true", "description" "True if this endpoint supports uploading multipart media."}}}, "simple" {"type" "object", "properties" {"path" {"description" "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.", "type" "string"}, "multipart" {"default" "true", "description" "True if this endpoint supports upload multipart media.", "type" "boolean"}}, "description" "Supports uploading as a single HTTP request."}}, "type" "object", "description" "Supported upload protocols."}, "maxSize" {"type" "string", "description" "Maximum size of a media upload, such as \"1MB\", \"2GB\" or \"3TB\"."}}, "description" "Media upload parameters.", "type" "object"}, "request" {"properties" {"$ref" {"type" "string", "description" "Schema ID for the request schema."}, "parameterName" {"type" "string", "description" "parameter name."}}, "type" "object", "description" "The schema for the request."}, "supportsSubscription" {"description" "Whether this method supports subscriptions.", "type" "boolean"}, "deprecated" {"type" "boolean", "description" "Whether this method is deprecated."}, "supportsMediaUpload" {"type" "boolean", "description" "Whether this method supports media uploads."}, "flatPath" {"type" "string", "description" "The URI path of this REST method in (RFC 6570) format without level 2 features ({+var}). Supplementary to the path property."}, "response" {"properties" {"$ref" {"type" "string", "description" "Schema ID for the response schema."}}, "description" "The schema for the response.", "type" "object"}, "etagRequired" {"description" "Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.", "type" "boolean"}, "parameters" {"type" "object", "additionalProperties" {"description" "Details for a single parameter in this method.", "$ref" "JsonSchema"}, "description" "Details for all parameters in this method."}, "apiVersion" {"type" "string", "description" "The API Version of this method, as passed in via the `X-Goog-Api-Version` header or `$apiVersion` query parameter."}, "description" {"type" "string", "description" "Description of this method."}, "parameterOrder" {"description" "Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the \"most-significant\" parameter appears first.", "type" "array", "items" {"type" "string"}}, "supportsMediaDownload" {"type" "boolean", "description" "Whether this method supports media downloads."}}, "type" "object", "id" "RestMethod"}, "JsonSchema" {"properties" {"properties" {"description" "If this is a schema for an object, list the schema for each property of this object.", "additionalProperties" {"$ref" "JsonSchema", "description" "A single property of this object. The value is itself a JSON Schema object describing this property."}, "type" "object"}, "maximum" {"type" "string", "description" "The maximum value of this parameter."}, "id" {"description" "Unique identifier for this schema.", "type" "string"}, "minimum" {"description" "The minimum value of this parameter.", "type" "string"}, "repeated" {"description" "Whether this parameter may appear multiple times.", "type" "boolean"}, "$ref" {"description" "A reference to another schema. The value of this property is the \"id\" of another schema.", "type" "string"}, "items" {"$ref" "JsonSchema", "description" "If this is a schema for an array, this property is the schema for each element in the array."}, "location" {"description" "Whether this parameter goes in the query or the path for REST requests.", "type" "string"}, "deprecated" {"type" "boolean", "description" "Whether the parameter is deprecated."}, "readOnly" {"type" "boolean", "description" "The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service."}, "annotations" {"type" "object", "description" "Additional information about this property.", "properties" {"required" {"type" "array", "items" {"type" "string"}, "description" "A list of methods for which this property is required on requests."}}}, "required" {"type" "boolean", "description" "Whether the parameter is required."}, "enumDeprecated" {"items" {"type" "boolean"}, "type" "array", "description" "The deprecation status for the enums. Each position maps to the corresponding value in the \"enum\" array."}, "pattern" {"description" "The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html", "type" "string"}, "type" {"description" "The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1", "type" "string"}, "enumDescriptions" {"description" "The descriptions for the enums. Each position maps to the corresponding value in the \"enum\" array.", "type" "array", "items" {"type" "string"}}, "additionalProperties" {"description" "If this is a schema for an object, this property is the schema for any additional properties with dynamic keys on this object.", "$ref" "JsonSchema"}, "default" {"description" "The default value of this property (if one exists).", "type" "string"}, "description" {"description" "A description of this object.", "type" "string"}, "variant" {"properties" {"discriminant" {"description" "The name of the type discriminant property.", "type" "string"}, "map" {"type" "array", "items" {"properties" {"$ref" {"type" "string"}, "type_value" {"type" "string"}}, "type" "object"}, "description" "The map of discriminant value to schema to use for parsing.."}}, "description" "In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.", "type" "object"}, "format" {"type" "string", "description" "An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23"}, "enum" {"type" "array", "description" "Values this parameter may take (if it is an enum).", "items" {"type" "string"}}}, "id" "JsonSchema", "type" "object"}, "RestResource" {"id" "RestResource", "properties" {"deprecated" {"type" "boolean", "description" "Whether this resource is deprecated."}, "methods" {"description" "Methods on this resource.", "type" "object", "additionalProperties" {"$ref" "RestMethod", "description" "Description for any methods on this resource."}}, "resources" {"type" "object", "additionalProperties" {"$ref" "RestResource", "description" "Description for any sub-resources on this resource."}, "description" "Sub-resources on this resource."}}, "type" "object"}, "DirectoryList" {"properties" {"items" {"items" {"type" "object", "properties" {"documentationLink" {"description" "A link to human readable documentation for the API.", "type" "string"}, "discoveryLink" {"description" "A link to the discovery document.", "type" "string"}, "id" {"description" "The id of this API.", "type" "string"}, "icons" {"properties" {"x32" {"type" "string", "description" "The URL of the 32x32 icon."}, "x16" {"type" "string", "description" "The URL of the 16x16 icon."}}, "type" "object", "description" "Links to 16x16 and 32x32 icons representing the API."}, "name" {"description" "The name of the API.", "type" "string"}, "labels" {"type" "array", "description" "Labels for the status of this API, such as labs or deprecated.", "items" {"type" "string"}}, "kind" {"type" "string", "description" "The kind for this response.", "default" "discovery#directoryItem"}, "preferred" {"description" "True if this version is the preferred version to use.", "type" "boolean"}, "title" {"type" "string", "description" "The title of this API."}, "version" {"description" "The version of the API.", "type" "string"}, "discoveryRestUrl" {"type" "string", "description" "The URL for the discovery REST document."}, "description" {"type" "string", "description" "The description of this API."}}}, "description" "The individual directory entries. One entry per api/version pair.", "type" "array"}, "kind" {"default" "discovery#directoryList", "type" "string", "description" "The kind for this response."}, "discoveryVersion" {"type" "string", "description" "Indicate the version of the Discovery API used to generate this doc.", "default" "v1"}}, "type" "object", "id" "DirectoryList"}, "RestDescription" {"type" "object", "id" "RestDescription", "properties" {"protocol" {"default" "rest", "description" "The protocol described by this document.", "type" "string"}, "packagePath" {"type" "string", "description" "The package of the owner of this API. See ownerDomain."}, "schemas" {"additionalProperties" {"$ref" "JsonSchema", "description" "An individual schema description."}, "description" "The schemas for this API.", "type" "object"}, "documentationLink" {"type" "string", "description" "A link to human readable documentation for the API."}, "batchPath" {"type" "string", "description" "The path for REST batch requests."}, "basePath" {"type" "string", "description" "[DEPRECATED] The base path for REST requests."}, "discoveryVersion" {"type" "string", "description" "Indicate the version of the Discovery API used to generate this doc.", "default" "v1"}, "servicePath" {"type" "string", "description" "The base path for all REST requests."}, "rootUrl" {"description" "The root URL under which all API services live.", "type" "string"}, "endpoints" {"type" "array", "description" "A list of location-based endpoint objects for this API. Each object contains the endpoint URL, location, description and deprecation status.", "items" {"description" "A single endpoint object", "type" "object", "properties" {"deprecated" {"type" "boolean", "description" "Whether this endpoint is deprecated"}, "endpointUrl" {"description" "The URL of the endpoint target host", "type" "string"}, "location" {"type" "string", "description" "The location of the endpoint"}, "description" {"type" "string", "description" "A string describing the host designated by the URL"}}}}, "ownerName" {"description" "The name of the owner of this API. See ownerDomain.", "type" "string"}, "methods" {"additionalProperties" {"description" "An individual method description.", "$ref" "RestMethod"}, "type" "object", "description" "API-level methods for this API."}, "auth" {"properties" {"oauth2" {"type" "object", "description" "OAuth 2.0 authentication information.", "properties" {"scopes" {"additionalProperties" {"type" "object", "properties" {"description" {"description" "Description of scope.", "type" "string"}}, "description" "The scope value."}, "type" "object", "description" "Available OAuth 2.0 scopes."}}}}, "type" "object", "description" "Authentication information."}, "id" {"type" "string", "description" "The ID of this API."}, "revision" {"description" "The version of this API.", "type" "string"}, "icons" {"type" "object", "properties" {"x32" {"type" "string", "description" "The URL of the 32x32 icon."}, "x16" {"description" "The URL of the 16x16 icon.", "type" "string"}}, "description" "Links to 16x16 and 32x32 icons representing the API."}, "exponentialBackoffDefault" {"description" "Enable exponential backoff for suitable methods in the generated clients.", "type" "boolean"}, "name" {"description" "The name of this API.", "type" "string"}, "ownerDomain" {"type" "string", "description" "The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name."}, "labels" {"description" "Labels for the status of this API, such as labs or deprecated.", "type" "array", "items" {"type" "string"}}, "baseUrl" {"description" "[DEPRECATED] The base URL for REST requests.", "type" "string"}, "etag" {"readOnly" true, "type" "string", "description" "The ETag for this response."}, "kind" {"description" "The kind for this response.", "default" "discovery#restDescription", "type" "string"}, "title" {"description" "The title of this API.", "type" "string"}, "version" {"type" "string", "description" "The version of this API."}, "canonicalName" {"description" "Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.", "type" "string"}, "features" {"type" "array", "description" "A list of supported features for this API.", "items" {"type" "string"}}, "parameters" {"additionalProperties" {"description" "Description of a single parameter.", "$ref" "JsonSchema"}, "type" "object", "description" "Common parameters that apply across all apis."}, "version_module" {"type" "boolean"}, "resources" {"additionalProperties" {"description" "An individual resource description. Contains methods and sub-resources related to this resource.", "$ref" "RestResource"}, "type" "object", "description" "The resources in this API."}, "description" {"type" "string", "description" "The description of this API."}}}}, "documentationLink" "https://developers.google.com/discovery/", "batchPath" "batch/discovery/v1", "basePath" "/discovery/v1/", "discoveryVersion" "v1", "servicePath" "discovery/v1/", "rootUrl" "https://www.googleapis.com/", "ownerName" "Google", "id" "discovery:v1", "revision" "20200806", "icons" {"x16" "http://www.google.com/images/icons/feature/filing_cabinet_search-g16.png", "x32" "http://www.google.com/images/icons/feature/filing_cabinet_search-g32.png"}, "name" "discovery", "ownerDomain" "google.com", "baseUrl" "https://www.googleapis.com/discovery/v1/", "etag" "\"-2NioU2H8y8siEzrBOV_qzRI6kQ/vabF8Q1ADCm_Bt9EBq9rkrRawQA\"", "kind" "discovery#restDescription", "title" "API Discovery Service", "version" "v1", "parameters" {"alt" {"default" "json", "enum" ["json"], "enumDescriptions" ["Responses with Content-Type of application/json"], "type" "string", "location" "query", "description" "Data format for the response."}, "oauth_token" {"type" "string", "description" "OAuth 2.0 token for the current user.", "location" "query"}, "userIp" {"description" "Deprecated. Please use quotaUser instead.", "type" "string", "location" "query"}, "fields" {"location" "query", "type" "string", "description" "Selector specifying which fields to include in a partial response."}, "prettyPrint" {"type" "boolean", "location" "query", "default" "true", "description" "Returns response with indentations and line breaks."}, "key" {"location" "query", "type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "quotaUser" {"location" "query", "type" "string", "description" "An opaque string that represents a user for quota purposes. Must not exceed 40 characters."}}, "resources" {"apis" {"methods" {"getRest" {"description" "Retrieve the description of a particular version of an api.", "httpMethod" "GET", "response" {"$ref" "RestDescription"}, "parameters" {"api" {"required" true, "type" "string", "description" "The name of the API.", "location" "path"}, "version" {"required" true, "type" "string", "description" "The version of the API.", "location" "path"}}, "id" "discovery.apis.getRest", "path" "apis/{api}/{version}/rest", "parameterOrder" ["api" "version"]}, "list" {"response" {"$ref" "DirectoryList"}, "description" "Retrieve the list of APIs supported at this endpoint.", "id" "discovery.apis.list", "path" "apis", "httpMethod" "GET", "parameters" {"name" {"location" "query", "type" "string", "description" "Only include APIs with the given name."}, "preferred" {"type" "boolean", "description" "Return only the preferred version of an API.", "default" "false", "location" "query"}}}}}}, "description" "Provides information about other Google APIs, such as what APIs are available, the resource, and method details for each API."}