{"fullyEncodeReservedExpansion" true, "protocol" "rest", "schemas" {"QueryResponse" {"properties" {"errors" {"description" "When set, indicates that the operation failed.", "$ref" "Errors"}, "kind" {"type" "string", "description" "This value specifies the type of data included in the API response. For the query method, the kind property value will be `youtubeAnalytics#resultTable`."}, "rows" {"description" "The list contains all rows of the result table. Each item in the list is an array that contains comma-delimited data corresponding to a single row of data. The order of the comma-delimited data fields will match the order of the columns listed in the `columnHeaders` field. If no data is available for the given query, the `rows` element will be omitted from the response. The response for a query with the `day` dimension will not contain rows for the most recent days.", "items" {"items" {"type" "any"}, "type" "array"}, "type" "array"}, "columnHeaders" {"description" "This value specifies information about the data returned in the `rows` fields. Each item in the `columnHeaders` list identifies a field returned in the `rows` value, which contains a list of comma-delimited data. The `columnHeaders` list will begin with the dimensions specified in the API request, which will be followed by the metrics specified in the API request. The order of both dimensions and metrics will match the ordering in the API request. For example, if the API request contains the parameters `dimensions=ageGroup,gender&metrics=viewerPercentage`, the API response will return columns in this order: `ageGroup`, `gender`, `viewerPercentage`.", "items" {"$ref" "ResultTableColumnHeader"}, "type" "array"}}, "description" "Response message for TargetedQueriesService.Query.", "type" "object", "id" "QueryResponse"}, "ListGroupsResponse" {"description" "Response message for GroupsService.ListGroups.", "id" "ListGroupsResponse", "type" "object", "properties" {"items" {"type" "array", "items" {"$ref" "Group"}, "description" "A list of groups that match the API request parameters. Each item in the list represents a `group` resource."}, "errors" {"description" "Apiary error details", "$ref" "Errors"}, "nextPageToken" {"type" "string", "description" "The token that can be used as the value of the `pageToken` parameter to retrieve the next page in the result set."}, "etag" {"type" "string", "description" "The Etag of this resource."}, "kind" {"type" "string", "description" "Identifies the API resource's type. The value will be `youtube#groupListResponse`."}}}, "ListGroupItemsResponse" {"properties" {"etag" {"description" "The Etag of this resource.", "type" "string"}, "errors" {"$ref" "Errors", "description" "Apiary error details"}, "kind" {"description" "Identifies the API resource's type. The value will be `youtube#groupItemListResponse`.", "type" "string"}, "items" {"description" "A list of groups that match the API request parameters. Each item in the list represents a `groupItem` resource.", "items" {"$ref" "GroupItem"}, "type" "array"}}, "type" "object", "description" "Response message for GroupsService.ListGroupItems.", "id" "ListGroupItemsResponse"}, "ResultTableColumnHeader" {"id" "ResultTableColumnHeader", "properties" {"name" {"type" "string", "description" "The name of the dimension or metric."}, "columnType" {"type" "string", "description" "The type of the column (`DIMENSION` or `METRIC`)."}, "dataType" {"type" "string", "description" "The type of the data in the column (`STRING`, `INTEGER`, `FLOAT`, etc.)."}}, "type" "object", "description" "The description of a column of the result table."}, "ErrorProto" {"description" "Describes one specific error.", "type" "object", "id" "ErrorProto", "properties" {"location" {"description" "Location of the error, as specified by the location type. If location_type is PATH, this should be a path to a field that's relative to the request, using FieldPath notation (net/proto2/util/public/field_path.h). Examples: authenticated_user.gaia_id resource.address[2].country", "type" "string"}, "debugInfo" {"type" "string", "description" "Debugging information, which should not be shared externally."}, "externalErrorMessage" {"description" "A short explanation for the error, which can be shared outside Google. Please set domain, code and arguments whenever possible instead of this error message so that external APIs can build safe error messages themselves. External messages built in a RoSy interface will most likely refer to information and concepts that are not available externally and should not be exposed. It is safer if external APIs can understand the errors and decide what the error message should look like.", "type" "string"}, "domain" {"description" "Error domain. RoSy services can define their own domain and error codes. This should normally be the name of an enum type, such as: gdata.CoreErrorDomain", "type" "string"}, "locationType" {"type" "string", "enum" ["PATH" "OTHER" "PARAMETER"], "enumDescriptions" ["location is an xpath-like path pointing to the request field that caused the error." "other location type which can safely be shared externally." "Location is request parameter. This maps to the {@link PARAMETERS} in {@link MessageLocation}."]}, "code" {"description" "Error code in the error domain. This should correspond to a value of the enum type whose name is in domain. See the core error domain in error_domain.proto.", "type" "string"}, "argument" {"type" "array", "description" "Error arguments, to be used when building user-friendly error messages given the error domain and code. Different error codes require different arguments.", "items" {"type" "string"}}}}, "GroupContentDetails" {"properties" {"itemCount" {"format" "uint64", "description" "The number of items in the group.", "type" "string"}, "itemType" {"type" "string", "description" "The type of resources that the group contains. Valid values for this property are: * `youtube#channel` * `youtube#playlist` * `youtube#video` * `youtubePartner#asset`"}}, "type" "object", "description" "A group's content details.", "id" "GroupContentDetails"}, "GroupItemResource" {"type" "object", "properties" {"kind" {"type" "string", "description" "Identifies the type of resource being added to the group. Valid values for this property are: * `youtube#channel` * `youtube#playlist` * `youtube#video` * `youtubePartner#asset`"}, "id" {"type" "string", "description" "The channel, video, playlist, or asset ID that YouTube uses to uniquely identify the item that is being added to the group."}}, "id" "GroupItemResource"}, "GroupSnippet" {"id" "GroupSnippet", "properties" {"publishedAt" {"description" "The date and time that the group was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.", "type" "string", "format" "google-datetime"}, "title" {"type" "string", "description" "The group name. The value must be a non-empty string."}}, "description" "A group snippet.", "type" "object"}, "Group" {"description" "A group.", "type" "object", "properties" {"contentDetails" {"description" "The `contentDetails` object contains additional information about the group, such as the number and type of items that it contains.", "$ref" "GroupContentDetails"}, "etag" {"type" "string", "description" "The Etag of this resource."}, "kind" {"type" "string", "description" "Identifies the API resource's type. The value will be `youtube#group`."}, "snippet" {"$ref" "GroupSnippet", "description" "The `snippet` object contains basic information about the group, including its creation date and name."}, "errors" {"$ref" "Errors", "description" "Apiary error details"}, "id" {"type" "string", "description" "The ID that YouTube uses to uniquely identify the group."}}, "id" "Group"}, "GroupItem" {"type" "object", "properties" {"resource" {"$ref" "GroupItemResource", "description" "The `resource` object contains information that identifies the item being added to the group."}, "etag" {"type" "string", "description" "The Etag of this resource."}, "groupId" {"type" "string", "description" "The ID that YouTube uses to uniquely identify the group that contains the item."}, "errors" {"description" "Apiary error details", "$ref" "Errors"}, "id" {"description" "The ID that YouTube uses to uniquely identify the `channel`, `video`, `playlist`, or `asset` resource that is included in the group. Note that this ID refers specifically to the inclusion of that resource in a particular group and is different than the channel ID, video ID, playlist ID, or asset ID that uniquely identifies the resource itself. The `resource.id` property's value specifies the unique channel, video, playlist, or asset ID.", "type" "string"}, "kind" {"description" "Identifies the API resource's type. The value will be `youtube#groupItem`.", "type" "string"}}, "description" "A group item.", "id" "GroupItem"}, "EmptyResponse" {"type" "object", "id" "EmptyResponse", "properties" {"errors" {"description" "Apiary error details", "$ref" "Errors"}}, "description" "Empty response."}, "Errors" {"description" "Request Error information. The presence of an error field signals that the operation has failed.", "properties" {"code" {"deprecated" true, "enum" ["BAD_REQUEST" "FORBIDDEN" "NOT_FOUND" "CONFLICT" "GONE" "PRECONDITION_FAILED" "INTERNAL_ERROR" "SERVICE_UNAVAILABLE"], "description" "Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead.", "enumDescriptions" ["" "" "" "" "" "" "" ""], "type" "string"}, "error" {"type" "array", "items" {"$ref" "ErrorProto"}, "description" "Specific error description and codes"}, "requestId" {"type" "string", "description" "Request identifier generated by the service, which can be used to identify the error in the logs"}}, "id" "Errors", "type" "object"}}, "documentationLink" "https://developers.google.com/youtube/analytics", "batchPath" "batch", "basePath" "", "discoveryVersion" "v1", "servicePath" "", "rootUrl" "https://youtubeanalytics.googleapis.com/", "ownerName" "Google", "auth" {"oauth2" {"scopes" {"https://www.googleapis.com/auth/yt-analytics-monetary.readonly" {"description" "View monetary and non-monetary YouTube Analytics reports for your YouTube content"}, "https://www.googleapis.com/auth/yt-analytics.readonly" {"description" "View YouTube Analytics reports for your YouTube content"}, "https://www.googleapis.com/auth/youtube.readonly" {"description" "View your YouTube account"}, "https://www.googleapis.com/auth/youtubepartner" {"description" "View and manage your assets and associated content on YouTube"}, "https://www.googleapis.com/auth/youtube" {"description" "Manage your YouTube account"}}}}, "id" "youtubeAnalytics:v2", "revision" "20240713", "mtlsRootUrl" "https://youtubeanalytics.mtls.googleapis.com/", "icons" {"x16" "http://www.google.com/images/icons/product/search-16.gif", "x32" "http://www.google.com/images/icons/product/search-32.gif"}, "name" "youtubeAnalytics", "ownerDomain" "google.com", "baseUrl" "https://youtubeanalytics.googleapis.com/", "kind" "discovery#restDescription", "title" "YouTube Analytics API", "version" "v2", "canonicalName" "YouTube Analytics", "parameters" {"callback" {"type" "string", "description" "JSONP", "location" "query"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"location" "query", "type" "string", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"location" "query", "type" "boolean", "description" "Returns response with indentations and line breaks.", "default" "true"}, "alt" {"default" "json", "description" "Data format for response.", "enum" ["json" "media" "proto"], "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "type" "string", "location" "query"}, "$.xgafv" {"location" "query", "type" "string", "description" "V1 error format.", "enum" ["1" "2"], "enumDescriptions" ["v1 error format" "v2 error format"]}, "fields" {"location" "query", "type" "string", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"location" "query", "type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"location" "query", "type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, "version_module" true, "resources" {"groupItems" {"methods" {"insert" {"path" "v2/groupItems", "id" "youtubeAnalytics.groupItems.insert", "httpMethod" "POST", "scopes" ["https://www.googleapis.com/auth/youtube" "https://www.googleapis.com/auth/youtube.readonly" "https://www.googleapis.com/auth/youtubepartner" "https://www.googleapis.com/auth/yt-analytics-monetary.readonly" "https://www.googleapis.com/auth/yt-analytics.readonly"], "request" {"$ref" "GroupItem"}, "flatPath" "v2/groupItems", "response" {"$ref" "GroupItem"}, "parameters" {"onBehalfOfContentOwner" {"location" "query", "description" "This parameter can only be used in a properly authorized request. **Note:** This parameter is intended exclusively for YouTube content partners that own and manage many different YouTube channels. The `onBehalfOfContentOwner` parameter indicates that the request's authorization credentials identify a YouTube user who is acting on behalf of the content owner specified in the parameter value. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The account that the user authenticates with must be linked to the specified YouTube content owner.", "type" "string"}}, "description" "Creates a group item.", "parameterOrder" []}, "list" {"path" "v2/groupItems", "id" "youtubeAnalytics.groupItems.list", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/youtube" "https://www.googleapis.com/auth/youtube.readonly" "https://www.googleapis.com/auth/youtubepartner" "https://www.googleapis.com/auth/yt-analytics-monetary.readonly" "https://www.googleapis.com/auth/yt-analytics.readonly"], "flatPath" "v2/groupItems", "response" {"$ref" "ListGroupItemsResponse"}, "parameters" {"onBehalfOfContentOwner" {"location" "query", "description" "This parameter can only be used in a properly authorized request. **Note:** This parameter is intended exclusively for YouTube content partners that own and manage many different YouTube channels. The `onBehalfOfContentOwner` parameter indicates that the request's authorization credentials identify a YouTube user who is acting on behalf of the content owner specified in the parameter value. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The account that the user authenticates with must be linked to the specified YouTube content owner.", "type" "string"}, "groupId" {"description" "The `groupId` parameter specifies the unique ID of the group for which you want to retrieve group items.", "type" "string", "location" "query"}}, "description" "Returns a collection of group items that match the API request parameters.", "parameterOrder" []}, "delete" {"path" "v2/groupItems", "id" "youtubeAnalytics.groupItems.delete", "httpMethod" "DELETE", "scopes" ["https://www.googleapis.com/auth/youtube" "https://www.googleapis.com/auth/youtube.readonly" "https://www.googleapis.com/auth/youtubepartner" "https://www.googleapis.com/auth/yt-analytics-monetary.readonly" "https://www.googleapis.com/auth/yt-analytics.readonly"], "flatPath" "v2/groupItems", "response" {"$ref" "EmptyResponse"}, "parameters" {"id" {"description" "The `id` parameter specifies the YouTube group item ID of the group item that is being deleted.", "type" "string", "location" "query"}, "onBehalfOfContentOwner" {"description" "This parameter can only be used in a properly authorized request. **Note:** This parameter is intended exclusively for YouTube content partners that own and manage many different YouTube channels. The `onBehalfOfContentOwner` parameter indicates that the request's authorization credentials identify a YouTube user who is acting on behalf of the content owner specified in the parameter value. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The account that the user authenticates with must be linked to the specified YouTube content owner.", "type" "string", "location" "query"}}, "description" "Removes an item from a group.", "parameterOrder" []}}}, "reports" {"methods" {"query" {"path" "v2/reports", "id" "youtubeAnalytics.reports.query", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/youtube" "https://www.googleapis.com/auth/youtube.readonly" "https://www.googleapis.com/auth/youtubepartner" "https://www.googleapis.com/auth/yt-analytics-monetary.readonly" "https://www.googleapis.com/auth/yt-analytics.readonly"], "flatPath" "v2/reports", "response" {"$ref" "QueryResponse"}, "parameters" {"startIndex" {"type" "integer", "description" "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter (one-based, inclusive).\", minValue: 1", "format" "int32", "location" "query"}, "startDate" {"type" "string", "description" "The start date for fetching YouTube Analytics data. The value should be in `YYYY-MM-DD` format. required: true, pattern: \"[0-9]{4}-[0-9]{2}-[0-9]{2}", "location" "query"}, "currency" {"type" "string", "location" "query", "description" "The currency to which financial metrics should be converted. The default is US Dollar (USD). If the result contains no financial metrics, this flag will be ignored. Responds with an error if the specified currency is not recognized.\", pattern: [A-Z]{3}"}, "filters" {"description" "A list of filters that should be applied when retrieving YouTube Analytics data. The [Available Reports](/youtube/analytics/v2/available_reports) document identifies the dimensions that can be used to filter each report, and the [Dimensions](/youtube/analytics/v2/dimsmets/dims) document defines those dimensions. If a request uses multiple filters, join them together with a semicolon (`;`), and the returned result table will satisfy both filters. For example, a filters parameter value of `video==dMH0bHeiRNg;country==IT` restricts the result set to include data for the given video in Italy.\",", "location" "query", "type" "string"}, "sort" {"type" "string", "description" "A comma-separated list of dimensions or metrics that determine the sort order for YouTube Analytics data. By default the sort order is ascending. The '`-`' prefix causes descending sort order.\", pattern: [-0-9a-zA-Z,]+", "location" "query"}, "maxResults" {"format" "int32", "location" "query", "type" "integer", "description" "The maximum number of rows to include in the response.\", minValue: 1"}, "ids" {"location" "query", "type" "string", "description" "Identifies the YouTube channel or content owner for which you are retrieving YouTube Analytics data. - To request data for a YouTube user, set the `ids` parameter value to `channel==CHANNEL_ID`, where `CHANNEL_ID` specifies the unique YouTube channel ID. - To request data for a YouTube CMS content owner, set the `ids` parameter value to `contentOwner==OWNER_NAME`, where `OWNER_NAME` is the CMS name of the content owner. required: true, pattern: [a-zA-Z]+==[a-zA-Z0-9_+-]+"}, "dimensions" {"location" "query", "type" "string", "description" "A comma-separated list of YouTube Analytics dimensions, such as `views` or `ageGroup,gender`. See the [Available Reports](/youtube/analytics/v2/available_reports) document for a list of the reports that you can retrieve and the dimensions used for those reports. Also see the [Dimensions](/youtube/analytics/v2/dimsmets/dims) document for definitions of those dimensions.\" pattern: [0-9a-zA-Z,]+"}, "includeHistoricalChannelData" {"type" "boolean", "location" "query", "description" "If set to true historical data (i.e. channel data from before the linking of the channel to the content owner) will be retrieved.\","}, "metrics" {"location" "query", "description" "A comma-separated list of YouTube Analytics metrics, such as `views` or `likes,dislikes`. See the [Available Reports](/youtube/analytics/v2/available_reports) document for a list of the reports that you can retrieve and the metrics available in each report, and see the [Metrics](/youtube/analytics/v2/dimsmets/mets) document for definitions of those metrics. required: true, pattern: [0-9a-zA-Z,]+", "type" "string"}, "endDate" {"description" "The end date for fetching YouTube Analytics data. The value should be in `YYYY-MM-DD` format. required: true, pattern: [0-9]{4}-[0-9]{2}-[0-9]{2}", "type" "string", "location" "query"}}, "description" "Retrieve your YouTube Analytics reports.", "parameterOrder" []}}}, "groups" {"methods" {"list" {"path" "v2/groups", "id" "youtubeAnalytics.groups.list", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/youtube" "https://www.googleapis.com/auth/youtube.readonly" "https://www.googleapis.com/auth/youtubepartner" "https://www.googleapis.com/auth/yt-analytics-monetary.readonly" "https://www.googleapis.com/auth/yt-analytics.readonly"], "flatPath" "v2/groups", "response" {"$ref" "ListGroupsResponse"}, "parameters" {"onBehalfOfContentOwner" {"description" "This parameter can only be used in a properly authorized request. **Note:** This parameter is intended exclusively for YouTube content partners that own and manage many different YouTube channels. The `onBehalfOfContentOwner` parameter indicates that the request's authorization credentials identify a YouTube user who is acting on behalf of the content owner specified in the parameter value. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The account that the user authenticates with must be linked to the specified YouTube content owner.", "location" "query", "type" "string"}, "mine" {"location" "query", "type" "boolean", "description" "This parameter can only be used in a properly authorized request. Set this parameter's value to true to retrieve all groups owned by the authenticated user."}, "id" {"location" "query", "description" "The `id` parameter specifies a comma-separated list of the YouTube group ID(s) for the resource(s) that are being retrieved. Each group must be owned by the authenticated user. In a `group` resource, the `id` property specifies the group's YouTube group ID. Note that if you do not specify a value for the `id` parameter, then you must set the `mine` parameter to `true`.", "type" "string"}, "pageToken" {"description" "The `pageToken` parameter identifies a specific page in the result set that should be returned. In an API response, the `nextPageToken` property identifies the next page that can be retrieved.", "location" "query", "type" "string"}}, "description" "Returns a collection of groups that match the API request parameters. For example, you can retrieve all groups that the authenticated user owns, or you can retrieve one or more groups by their unique IDs.", "parameterOrder" []}, "insert" {"path" "v2/groups", "id" "youtubeAnalytics.groups.insert", "httpMethod" "POST", "scopes" ["https://www.googleapis.com/auth/youtube" "https://www.googleapis.com/auth/youtube.readonly" "https://www.googleapis.com/auth/youtubepartner" "https://www.googleapis.com/auth/yt-analytics-monetary.readonly" "https://www.googleapis.com/auth/yt-analytics.readonly"], "request" {"$ref" "Group"}, "flatPath" "v2/groups", "response" {"$ref" "Group"}, "parameters" {"onBehalfOfContentOwner" {"location" "query", "description" "This parameter can only be used in a properly authorized request. **Note:** This parameter is intended exclusively for YouTube content partners that own and manage many different YouTube channels. The `onBehalfOfContentOwner` parameter indicates that the request's authorization credentials identify a YouTube user who is acting on behalf of the content owner specified in the parameter value. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The account that the user authenticates with must be linked to the specified YouTube content owner.", "type" "string"}}, "description" "Creates a group.", "parameterOrder" []}, "delete" {"path" "v2/groups", "id" "youtubeAnalytics.groups.delete", "httpMethod" "DELETE", "scopes" ["https://www.googleapis.com/auth/youtube" "https://www.googleapis.com/auth/youtube.readonly" "https://www.googleapis.com/auth/youtubepartner" "https://www.googleapis.com/auth/yt-analytics-monetary.readonly" "https://www.googleapis.com/auth/yt-analytics.readonly"], "flatPath" "v2/groups", "response" {"$ref" "EmptyResponse"}, "parameters" {"id" {"location" "query", "type" "string", "description" "The `id` parameter specifies the YouTube group ID of the group that is being deleted."}, "onBehalfOfContentOwner" {"description" "This parameter can only be used in a properly authorized request. **Note:** This parameter is intended exclusively for YouTube content partners that own and manage many different YouTube channels. The `onBehalfOfContentOwner` parameter indicates that the request's authorization credentials identify a YouTube user who is acting on behalf of the content owner specified in the parameter value. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The account that the user authenticates with must be linked to the specified YouTube content owner.", "type" "string", "location" "query"}}, "description" "Deletes a group.", "parameterOrder" []}, "update" {"path" "v2/groups", "id" "youtubeAnalytics.groups.update", "httpMethod" "PUT", "scopes" ["https://www.googleapis.com/auth/youtube" "https://www.googleapis.com/auth/youtube.readonly" "https://www.googleapis.com/auth/youtubepartner" "https://www.googleapis.com/auth/yt-analytics-monetary.readonly" "https://www.googleapis.com/auth/yt-analytics.readonly"], "request" {"$ref" "Group"}, "flatPath" "v2/groups", "response" {"$ref" "Group"}, "parameters" {"onBehalfOfContentOwner" {"type" "string", "description" "This parameter can only be used in a properly authorized request. **Note:** This parameter is intended exclusively for YouTube content partners that own and manage many different YouTube channels. The `onBehalfOfContentOwner` parameter indicates that the request's authorization credentials identify a YouTube user who is acting on behalf of the content owner specified in the parameter value. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The account that the user authenticates with must be linked to the specified YouTube content owner.", "location" "query"}}, "description" "Modifies a group. For example, you could change a group's title.", "parameterOrder" []}}}}, "description" "Retrieves your YouTube Analytics data."}