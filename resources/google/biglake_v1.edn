{"fullyEncodeReservedExpansion" true, "protocol" "rest", "schemas" {"RenameTableRequest" {"id" "RenameTableRequest", "description" "Request message for the RenameTable method in MetastoreService", "type" "object", "properties" {"newName" {"description" "Required. The new `name` for the specified table, must be in the same database. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}", "type" "string"}}}, "ListTablesResponse" {"id" "ListTablesResponse", "description" "Response message for the ListTables method.", "type" "object", "properties" {"tables" {"description" "The tables from the specified database.", "type" "array", "items" {"$ref" "Table"}}, "nextPageToken" {"description" "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.", "type" "string"}}}, "StorageDescriptor" {"id" "StorageDescriptor", "description" "Stores physical storage information of the data.", "type" "object", "properties" {"locationUri" {"description" "Cloud Storage folder URI where the table data is stored, starting with \"gs://\".", "type" "string"}, "inputFormat" {"description" "The fully qualified Java class name of the input format.", "type" "string"}, "outputFormat" {"description" "The fully qualified Java class name of the output format.", "type" "string"}, "serdeInfo" {"description" "Serializer and deserializer information.", "$ref" "SerDeInfo"}}}, "HiveTableOptions" {"id" "HiveTableOptions", "description" "Options of a Hive table.", "type" "object", "properties" {"parameters" {"description" "Stores user supplied Hive table parameters.", "type" "object", "additionalProperties" {"type" "string"}}, "tableType" {"description" "Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.", "type" "string"}, "storageDescriptor" {"description" "Stores physical storage information of the data.", "$ref" "StorageDescriptor"}}}, "ListCatalogsResponse" {"id" "ListCatalogsResponse", "description" "Response message for the ListCatalogs method.", "type" "object", "properties" {"catalogs" {"description" "The catalogs from the specified project.", "type" "array", "items" {"$ref" "Catalog"}}, "nextPageToken" {"description" "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.", "type" "string"}}}, "HiveDatabaseOptions" {"id" "HiveDatabaseOptions", "description" "Options of a Hive database.", "type" "object", "properties" {"locationUri" {"description" "Cloud Storage folder URI where the database data is stored, starting with \"gs://\".", "type" "string"}, "parameters" {"description" "Stores user supplied Hive database parameters.", "type" "object", "additionalProperties" {"type" "string"}}}}, "SerDeInfo" {"id" "SerDeInfo", "description" "Serializer and deserializer information.", "type" "object", "properties" {"serializationLib" {"description" "The fully qualified Java class name of the serialization library.", "type" "string"}}}, "Catalog" {"id" "Catalog", "description" "Catalog is the container of databases.", "type" "object", "properties" {"name" {"description" "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}", "readOnly" true, "type" "string"}, "createTime" {"description" "Output only. The creation time of the catalog.", "readOnly" true, "type" "string", "format" "google-datetime"}, "updateTime" {"description" "Output only. The last modification time of the catalog.", "readOnly" true, "type" "string", "format" "google-datetime"}, "deleteTime" {"description" "Output only. The deletion time of the catalog. Only set after the catalog is deleted.", "readOnly" true, "type" "string", "format" "google-datetime"}, "expireTime" {"description" "Output only. The time when this catalog is considered expired. Only set after the catalog is deleted.", "readOnly" true, "type" "string", "format" "google-datetime"}}}, "Table" {"id" "Table", "description" "Represents a table.", "type" "object", "properties" {"hiveOptions" {"description" "Options of a Hive table.", "$ref" "HiveTableOptions"}, "name" {"description" "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}", "readOnly" true, "type" "string"}, "createTime" {"description" "Output only. The creation time of the table.", "readOnly" true, "type" "string", "format" "google-datetime"}, "updateTime" {"description" "Output only. The last modification time of the table.", "readOnly" true, "type" "string", "format" "google-datetime"}, "deleteTime" {"description" "Output only. The deletion time of the table. Only set after the table is deleted.", "readOnly" true, "type" "string", "format" "google-datetime"}, "expireTime" {"description" "Output only. The time when this table is considered expired. Only set after the table is deleted.", "readOnly" true, "type" "string", "format" "google-datetime"}, "type" {"description" "The table type.", "type" "string", "enumDescriptions" ["The type is not specified." "Represents a table compatible with Hive Metastore tables."], "enum" ["TYPE_UNSPECIFIED" "HIVE"]}, "etag" {"description" "The checksum of a table object computed by the server based on the value of other fields. It may be sent on update requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations.", "type" "string"}}}, "Database" {"id" "Database", "description" "Database is the container of tables.", "type" "object", "properties" {"hiveOptions" {"description" "Options of a Hive database.", "$ref" "HiveDatabaseOptions"}, "name" {"description" "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}", "readOnly" true, "type" "string"}, "createTime" {"description" "Output only. The creation time of the database.", "readOnly" true, "type" "string", "format" "google-datetime"}, "updateTime" {"description" "Output only. The last modification time of the database.", "readOnly" true, "type" "string", "format" "google-datetime"}, "deleteTime" {"description" "Output only. The deletion time of the database. Only set after the database is deleted.", "readOnly" true, "type" "string", "format" "google-datetime"}, "expireTime" {"description" "Output only. The time when this database is considered expired. Only set after the database is deleted.", "readOnly" true, "type" "string", "format" "google-datetime"}, "type" {"description" "The database type.", "type" "string", "enumDescriptions" ["The type is not specified." "Represents a database storing tables compatible with Hive Metastore tables."], "enum" ["TYPE_UNSPECIFIED" "HIVE"]}}}, "ListDatabasesResponse" {"id" "ListDatabasesResponse", "description" "Response message for the ListDatabases method.", "type" "object", "properties" {"databases" {"description" "The databases from the specified catalog.", "type" "array", "items" {"$ref" "Database"}}, "nextPageToken" {"description" "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.", "type" "string"}}}}, "documentationLink" "https://cloud.google.com/bigquery/", "batchPath" "batch", "basePath" "", "discoveryVersion" "v1", "servicePath" "", "rootUrl" "https://biglake.googleapis.com/", "ownerName" "Google", "auth" {"oauth2" {"scopes" {"https://www.googleapis.com/auth/bigquery" {"description" "View and manage your data in Google BigQuery and see the email address for your Google Account"}, "https://www.googleapis.com/auth/cloud-platform" {"description" "See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account."}}}}, "id" "biglake:v1", "revision" "20240703", "mtlsRootUrl" "https://biglake.mtls.googleapis.com/", "icons" {"x16" "http://www.google.com/images/icons/product/search-16.gif", "x32" "http://www.google.com/images/icons/product/search-32.gif"}, "name" "biglake", "ownerDomain" "google.com", "baseUrl" "https://biglake.googleapis.com/", "kind" "discovery#restDescription", "title" "BigLake API", "version" "v1", "canonicalName" "BigLake Service", "parameters" {"callback" {"type" "string", "description" "JSONP", "location" "query"}, "uploadType" {"type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query"}, "key" {"type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query"}, "access_token" {"type" "string", "description" "OAuth access token.", "location" "query"}, "oauth_token" {"type" "string", "description" "OAuth 2.0 token for the current user.", "location" "query"}, "prettyPrint" {"type" "boolean", "description" "Returns response with indentations and line breaks.", "default" "true", "location" "query"}, "alt" {"type" "string", "description" "Data format for response.", "default" "json", "enum" ["json" "media" "proto"], "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query"}, "$.xgafv" {"type" "string", "description" "V1 error format.", "enum" ["1" "2"], "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query"}, "fields" {"type" "string", "description" "Selector specifying which fields to include in a partial response.", "location" "query"}, "upload_protocol" {"type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query"}, "quotaUser" {"type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location" "query"}}, "version_module" true, "resources" {"projects" {"resources" {"locations" {"resources" {"catalogs" {"methods" {"create" {"path" "v1/{+parent}/catalogs", "id" "biglake.projects.locations.catalogs.create", "httpMethod" "POST", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "request" {"$ref" "Catalog"}, "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs", "response" {"$ref" "Catalog"}, "parameters" {"parent" {"description" "Required. The parent resource where this catalog will be created. Format: projects/{project_id_or_number}/locations/{location_id}", "pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path", "required" true, "type" "string"}, "catalogId" {"description" "Required. The ID to use for the catalog, which will become the final component of the catalog's resource name.", "location" "query", "type" "string"}}, "description" "Creates a new catalog.", "parameterOrder" ["parent"]}, "delete" {"path" "v1/{+name}", "id" "biglake.projects.locations.catalogs.delete", "httpMethod" "DELETE", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}", "response" {"$ref" "Catalog"}, "parameters" {"name" {"description" "Required. The name of the catalog to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$", "location" "path", "required" true, "type" "string"}}, "description" "Deletes an existing catalog specified by the catalog ID.", "parameterOrder" ["name"]}, "get" {"path" "v1/{+name}", "id" "biglake.projects.locations.catalogs.get", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}", "response" {"$ref" "Catalog"}, "parameters" {"name" {"description" "Required. The name of the catalog to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$", "location" "path", "required" true, "type" "string"}}, "description" "Gets the catalog specified by the resource name.", "parameterOrder" ["name"]}, "list" {"path" "v1/{+parent}/catalogs", "id" "biglake.projects.locations.catalogs.list", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs", "response" {"$ref" "ListCatalogsResponse"}, "parameters" {"parent" {"description" "Required. The parent, which owns this collection of catalogs. Format: projects/{project_id_or_number}/locations/{location_id}", "pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path", "required" true, "type" "string"}, "pageSize" {"description" "The maximum number of catalogs to return. The service may return fewer than this value. If unspecified, at most 50 catalogs will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.", "location" "query", "type" "integer", "format" "int32"}, "pageToken" {"description" "A page token, received from a previous `ListCatalogs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCatalogs` must match the call that provided the page token.", "location" "query", "type" "string"}}, "description" "List all catalogs in a specified project.", "parameterOrder" ["parent"]}}, "resources" {"databases" {"methods" {"create" {"path" "v1/{+parent}/databases", "id" "biglake.projects.locations.catalogs.databases.create", "httpMethod" "POST", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "request" {"$ref" "Database"}, "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases", "response" {"$ref" "Database"}, "parameters" {"parent" {"description" "Required. The parent resource where this database will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$", "location" "path", "required" true, "type" "string"}, "databaseId" {"description" "Required. The ID to use for the database, which will become the final component of the database's resource name.", "location" "query", "type" "string"}}, "description" "Creates a new database.", "parameterOrder" ["parent"]}, "delete" {"path" "v1/{+name}", "id" "biglake.projects.locations.catalogs.databases.delete", "httpMethod" "DELETE", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}", "response" {"$ref" "Database"}, "parameters" {"name" {"description" "Required. The name of the database to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+$", "location" "path", "required" true, "type" "string"}}, "description" "Deletes an existing database specified by the database ID.", "parameterOrder" ["name"]}, "patch" {"path" "v1/{+name}", "id" "biglake.projects.locations.catalogs.databases.patch", "httpMethod" "PATCH", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "request" {"$ref" "Database"}, "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}", "response" {"$ref" "Database"}, "parameters" {"name" {"description" "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+$", "location" "path", "required" true, "type" "string"}, "updateMask" {"description" "The list of fields to update. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.", "location" "query", "type" "string", "format" "google-fieldmask"}}, "description" "Updates an existing database specified by the database ID.", "parameterOrder" ["name"]}, "get" {"path" "v1/{+name}", "id" "biglake.projects.locations.catalogs.databases.get", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}", "response" {"$ref" "Database"}, "parameters" {"name" {"description" "Required. The name of the database to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+$", "location" "path", "required" true, "type" "string"}}, "description" "Gets the database specified by the resource name.", "parameterOrder" ["name"]}, "list" {"path" "v1/{+parent}/databases", "id" "biglake.projects.locations.catalogs.databases.list", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases", "response" {"$ref" "ListDatabasesResponse"}, "parameters" {"parent" {"description" "Required. The parent, which owns this collection of databases. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+$", "location" "path", "required" true, "type" "string"}, "pageSize" {"description" "The maximum number of databases to return. The service may return fewer than this value. If unspecified, at most 50 databases will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.", "location" "query", "type" "integer", "format" "int32"}, "pageToken" {"description" "A page token, received from a previous `ListDatabases` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDatabases` must match the call that provided the page token.", "location" "query", "type" "string"}}, "description" "List all databases in a specified catalog.", "parameterOrder" ["parent"]}}, "resources" {"tables" {"methods" {"create" {"path" "v1/{+parent}/tables", "id" "biglake.projects.locations.catalogs.databases.tables.create", "httpMethod" "POST", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "request" {"$ref" "Table"}, "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}/tables", "response" {"$ref" "Table"}, "parameters" {"parent" {"description" "Required. The parent resource where this table will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+$", "location" "path", "required" true, "type" "string"}, "tableId" {"description" "Required. The ID to use for the table, which will become the final component of the table's resource name.", "location" "query", "type" "string"}}, "description" "Creates a new table.", "parameterOrder" ["parent"]}, "delete" {"path" "v1/{+name}", "id" "biglake.projects.locations.catalogs.databases.tables.delete", "httpMethod" "DELETE", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}/tables/{tablesId}", "response" {"$ref" "Table"}, "parameters" {"name" {"description" "Required. The name of the table to delete. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+/tables/[^/]+$", "location" "path", "required" true, "type" "string"}}, "description" "Deletes an existing table specified by the table ID.", "parameterOrder" ["name"]}, "patch" {"path" "v1/{+name}", "id" "biglake.projects.locations.catalogs.databases.tables.patch", "httpMethod" "PATCH", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "request" {"$ref" "Table"}, "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}/tables/{tablesId}", "response" {"$ref" "Table"}, "parameters" {"name" {"description" "Output only. The resource name. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+/tables/[^/]+$", "location" "path", "required" true, "type" "string"}, "updateMask" {"description" "The list of fields to update. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.", "location" "query", "type" "string", "format" "google-fieldmask"}}, "description" "Updates an existing table specified by the table ID.", "parameterOrder" ["name"]}, "rename" {"path" "v1/{+name}:rename", "id" "biglake.projects.locations.catalogs.databases.tables.rename", "httpMethod" "POST", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "request" {"$ref" "RenameTableRequest"}, "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}/tables/{tablesId}:rename", "response" {"$ref" "Table"}, "parameters" {"name" {"description" "Required. The table's `name` field is used to identify the table to rename. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+/tables/[^/]+$", "location" "path", "required" true, "type" "string"}}, "description" "Renames an existing table specified by the table ID.", "parameterOrder" ["name"]}, "get" {"path" "v1/{+name}", "id" "biglake.projects.locations.catalogs.databases.tables.get", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}/tables/{tablesId}", "response" {"$ref" "Table"}, "parameters" {"name" {"description" "Required. The name of the table to retrieve. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}/tables/{table_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+/tables/[^/]+$", "location" "path", "required" true, "type" "string"}}, "description" "Gets the table specified by the resource name.", "parameterOrder" ["name"]}, "list" {"path" "v1/{+parent}/tables", "id" "biglake.projects.locations.catalogs.databases.tables.list", "httpMethod" "GET", "scopes" ["https://www.googleapis.com/auth/bigquery" "https://www.googleapis.com/auth/cloud-platform"], "flatPath" "v1/projects/{projectsId}/locations/{locationsId}/catalogs/{catalogsId}/databases/{databasesId}/tables", "response" {"$ref" "ListTablesResponse"}, "parameters" {"parent" {"description" "Required. The parent, which owns this collection of tables. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}", "pattern" "^projects/[^/]+/locations/[^/]+/catalogs/[^/]+/databases/[^/]+$", "location" "path", "required" true, "type" "string"}, "pageSize" {"description" "The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 50 tables will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.", "location" "query", "type" "integer", "format" "int32"}, "pageToken" {"description" "A page token, received from a previous `ListTables` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTables` must match the call that provided the page token.", "location" "query", "type" "string"}, "view" {"description" "The view for the returned tables.", "location" "query", "type" "string", "enumDescriptions" ["Default value. The API will default to the BASIC view." "Include only table names. This is the default value." "Include everything."], "enum" ["TABLE_VIEW_UNSPECIFIED" "BASIC" "FULL"]}}, "description" "List all tables in a specified database.", "parameterOrder" ["parent"]}}}}}}}}}}}}, "description" "The BigLake API provides access to BigLake Metastore, a serverless, fully managed, and highly available metastore for open-source data that can be used for querying Apache Iceberg tables in BigQuery."}